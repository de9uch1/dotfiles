#!/usr/bin/env python3

import os
from argparse import ArgumentParser, Namespace


def parse_args() -> Namespace:
    parser = ArgumentParser()
    # fmt: off
    parser.add_argument("file", help="file name")
    parser.add_argument("suffix", default=".bak", nargs="?",
                        help="suffix of the backup file")
    parser.add_argument("--restore", "-r", action="store_true",
                        help="restore from the backup file")
    parser.add_argument("--quiet", "-q", action="store_true",
                        help="not print the results")
    parser.add_argument("--dry-run", "-n", action="store_true",
                        help="just print the results")
    # fmt: on
    return parser.parse_args()


def main(args: Namespace) -> None:
    filename: str = args.file
    suffix: str = args.suffix

    if not os.path.exists(filename):
        raise FileNotFoundError

    if args.restore:
        suffix_len = len(suffix)
        if filename[len(filename) - suffix_len :] == suffix:
            dstname = filename[:-suffix_len]
        else:
            dstname = filename
    else:
        dstname = filename + args.suffix
        if os.path.exists(os.path.abspath(dstname)):
            raise FileExistsError

    if not args.dry_run and filename != dstname:
        os.rename(filename, dstname)

    if not args.quiet:
        print(f"{filename} -> {dstname}")


def cli_main():
    args = parse_args()
    main(args)


if __name__ == "__main__":
    cli_main()
